{"version":3,"file":"static/js/Reviews.dae2743b.chunk.js","mappings":"uQACA,GAAgB,KAAO,0BAA0B,OAAS,4BAA4B,QAAU,8B,SCmChG,EAjCoB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACrB,OACE,8BACsB,IAAnBA,EAAQC,QACP,sEAEA,gBAAKC,UAAWC,EAAAA,KAAhB,UACE,eAAID,UAAWC,EAAAA,KAAf,SACGH,EAAQI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,eAAaL,UAAWC,EAAAA,KAAxB,UACE,4BACE,eAAGD,UAAWC,EAAAA,OAAd,qBAAiCG,MACjC,cAAGJ,UAAWC,EAAAA,QAAd,SAA0BI,QAHrBF,aCLjBG,EAAS,UAuCf,EArCgB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOV,EAAP,KAAgBW,EAAhB,KACA,GAA4BD,EAAAA,EAAAA,UAASE,EAAAA,GAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,8GAEuBC,EAAAA,EAAAA,IAAcP,EAASD,GAF9C,OAEUS,EAFV,OAGIN,EAAWM,EAAKC,SAChBJ,EAAUF,EAAAA,GAAAA,UAJd,gDAMIE,EAAUF,EAAAA,GAAAA,UANd,0DAHc,sBACdE,EAAUF,EAAAA,GAAAA,SADI,mCAadO,KACC,CAACV,KAGF,gCACGI,IAAWD,EAAAA,GAAAA,UAAkB,SAACQ,EAAA,EAAD,IAE7BP,IAAWD,EAAAA,GAAAA,WAAmB,SAAC,EAAD,CAAaZ,QAASA,IAEpDa,IAAWD,EAAAA,GAAAA,WACV","sources":["webpack://react-homework-template/./src/components/CardReviws/CardReviews.module.css?41dc","components/CardReviws/CardReviews.jsx","views/ReviewsPage/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CardReviews_item__o+9mL\",\"author\":\"CardReviews_author__nLojJ\",\"content\":\"CardReviews_content__x0EzB\"};","import PropTypes from 'prop-types';\nimport s from './CardReviews.module.css';\n\nconst CardReviews = ({ reviews }) => {\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <p>There is no information about the cast...</p>\n      ) : (\n        <div className={s.wrap}>\n          <ul className={s.list}>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id} className={s.item}>\n                <div>\n                  <p className={s.author}>Author: {author}</p>\n                  <p className={s.content}>{content}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nCardReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default CardReviews;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMoviesInfo } from 'service/api';\nimport { Status } from 'helpers/helpers';\nimport Loader from 'components/Loader';\nimport CardReviews from 'components/CardReviws/CardReviews';\n\nconst PARAMS = 'reviews';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    async function getMovieReviews() {\n      try {\n        const data = await getMoviesInfo(movieId, PARAMS);\n        setReviews(data.results);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setStatus(Status.RESOLVED);\n      }\n    }\n\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {status === Status.PENDING && <Loader />}\n\n      {status === Status.RESOLVED && <CardReviews reviews={reviews} />}\n\n      {status === Status.REJECTED && (\n        <p>There is no information about the cast...</p>\n      )}\n    </>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n"],"names":["reviews","length","className","s","map","id","author","content","PARAMS","movieId","useState","setReviews","Status","status","setStatus","useEffect","getMoviesInfo","data","results","getMovieReviews","Loader"],"sourceRoot":""}