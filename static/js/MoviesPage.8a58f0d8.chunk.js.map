{"version":3,"file":"static/js/MoviesPage.8a58f0d8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","helpers/helpers.js","service/createConfigForRequest.js","service/api.js","webpack://react-homework-template/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx","views/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieItem_img__Q3nH0\",\"link__wrap\":\"MovieItem_link__wrap__6Wq6D\",\"link\":\"MovieItem_link__mit6j\",\"title\":\"MovieItem_title__JQYXo\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { PATH_IMAGE, DEFAULT_IMAGE } from 'helpers/helpers';\nimport s from './MovieItem.module.css';\n\nconst MovieItem = ({ movie }) => {\n  const location = useLocation();\n\n  const { id, poster_path, title, original_name } = movie;\n\n  return (\n    <li className={s.item}>\n      <Link\n        to={{\n          pathname: `/movies/${id}`,\n          state: { from: location },\n        }}\n        className={s.link}\n      >\n        <img\n          className={s.img}\n          src={poster_path ? PATH_IMAGE + poster_path : DEFAULT_IMAGE}\n          alt={movie.title || movie.original_name}\n        />\n        <p className={s.title}>{title || original_name}</p>\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    original_name: PropTypes.string,\n  }),\n};\n\nexport default MovieItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import PropTypes from 'prop-types';\nimport MovieItem from 'components/MovieItem';\n\nimport s from './MovieList.module.css';\n\nconst MovieList = ({ movie }) => {\n  return (\n    <ul className={s.list}>\n      {movie && movie.map(movie => <MovieItem key={movie.id} movie={movie} />)}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movie: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","export const PATH_IMAGE = 'https://image.tmdb.org/t/p/w1280';\nexport const DEFAULT_IMAGE =\n  'https://cdn.pixabay.com/photo/2016/04/01/10/11/avatar-1299805__340.png';\n\nexport const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_THEMOVIEDB_KEY = '185a0ab5d7b155f2662fdcb8709753e2';\n\nexport const getMovies = axios.create({\n  url: '',\n  baseURL: BASE_URL,\n\n  params: {\n    api_key: API_THEMOVIEDB_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n","import { getMovies } from './createConfigForRequest';\n\nexport const getTrendingMovieAll = async () => {\n  try {\n    const {\n      data: { results },\n    } = await getMovies('/trending/all/day', {});\n\n    return results;\n  } catch (error) {\n    return Promise.reject('There is no information about the movie yet...');\n  }\n};\n\nexport const getMovie = async name => {\n  try {\n    const {\n      data: { results },\n    } = await getMovies('/search/movie', {\n      params: { query: name },\n    });\n\n    return results;\n  } catch (error) {\n    return Promise.reject('There is no information about the movie yet...');\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const { data } = await getMovies(`movie/${id}`, {});\n\n    return data;\n  } catch (error) {\n    return Promise.reject('There is no information about the movie yet...');\n  }\n};\n\nexport const getMoviesInfo = async (id, param) => {\n  try {\n    const { data } = await getMovies(`movie/${id}/${param}`, {});\n\n    return data;\n  } catch (error) {\n    return Promise.reject('There is no information about the movie yet...');\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Search_form__KGT+E\",\"label\":\"Search_label__R648n\",\"input\":\"Search_input__PXR0c\",\"button\":\"Search_button__eG3f0\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport s from './Search.module.css';\n\nconst Search = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setQuery(value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={s.input}\n          value={query}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.button}>Search</button>\n    </form>\n  );\n};\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import { useState, useEffect } from 'react';\nimport { getMovie } from 'service/api';\nimport { useHistory } from 'react-router-dom';\nimport Search from 'components/Search';\nimport MovieList from 'components/MovieList';\n\nconst MoviesPage = () => {\n  const history = useHistory();\n  const [query, setQuery] = useState(history?.location?.query ?? '');\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    if (query.trim() === '') {\n      return;\n    }\n\n    const normalizedQuery = query.toLowerCase();\n\n    async function getMovieOne() {\n      try {\n        const data = await getMovie(normalizedQuery);\n        setMovies(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    getMovieOne();\n  }, [query]);\n\n  const onSubmit = query => {\n    setQuery(query);\n    history.push({\n      query,\n    });\n  };\n\n  return (\n    <>\n      <Search onSubmit={onSubmit} />\n      {movies && <MovieList movie={movies} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["movie","location","useLocation","id","poster_path","title","original_name","className","s","to","pathname","state","from","src","PATH_IMAGE","DEFAULT_IMAGE","alt","map","Status","IDLE","PENDING","RESOLVED","REJECTED","getMovies","axios","url","baseURL","params","api_key","language","include_adult","getTrendingMovieAll","results","data","Promise","reject","getMovie","name","query","getMovieDetails","getMoviesInfo","param","onSubmit","useState","setQuery","e","preventDefault","trim","type","value","onChange","target","toLowerCase","history","useHistory","movies","setMovies","useEffect","normalizedQuery","getMovieOne","console","error","push","MovieList"],"sourceRoot":""}