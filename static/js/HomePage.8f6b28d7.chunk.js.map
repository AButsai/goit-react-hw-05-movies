{"version":3,"file":"static/js/HomePage.8f6b28d7.chunk.js","mappings":"yMACA,GAAgB,IAAM,uBAAuB,WAAa,8BAA8B,KAAO,wBAAwB,MAAQ,0B,SCqC/H,EAjCkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MAETC,EAA0CH,EAA1CG,GAAIC,EAAsCJ,EAAtCI,YAAaC,EAAyBL,EAAzBK,MAAOC,EAAkBN,EAAlBM,cAEhC,OACE,eAAIC,UAAWC,EAAAA,KAAf,UACE,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaP,GACrBQ,MAAO,CAAEC,KAAMX,IAEjBM,UAAWC,EAAAA,KALb,WAOE,gBACED,UAAWC,EAAAA,IACXK,IAAKT,EAAcU,EAAAA,GAAaV,EAAcW,EAAAA,GAC9CC,IAAKhB,EAAMK,OAASL,EAAMM,iBAE5B,cAAGC,UAAWC,EAAAA,MAAd,SAAwBH,GAASC,UCvBzC,EAAuB,wBCoBvB,EAhBkB,SAAC,GAAe,IAAbN,EAAY,EAAZA,MACnB,OACE,eAAIO,UAAWC,EAAf,SACGR,GAASA,EAAMiB,KAAI,SAAAjB,GAAK,OAAI,SAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMG,W,sGCRlD,IAAMW,EAAa,mCACbC,EACX,yEAEWG,EAAS,CACpBC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,a,yKCHCC,E,MAAYC,GAAAA,OAAa,CACpCC,IAAK,GACLC,QALe,+BAOfC,OAAQ,CACNC,QAPuB,mCAQvBC,SAAU,QACVC,eAAe,KCVNC,EAAmB,mCAAG,+GAIrBR,EAAU,oBAAqB,IAJV,uBAGrBS,EAHqB,EAG7BC,KAAQD,QAHqB,kBAMxBA,GANwB,yDAQxBE,QAAQC,OAAO,mDARS,yDAAH,qDAYnBC,EAAQ,mCAAG,WAAMC,GAAN,kGAIVd,EAAU,gBAAiB,CACnCI,OAAQ,CAAEW,MAAOD,KALC,uBAGVL,EAHU,EAGlBC,KAAQD,QAHU,kBAQbA,GARa,yDAUbE,QAAQC,OAAO,mDAVF,yDAAH,sDAcRI,EAAe,mCAAG,WAAMpC,GAAN,kGAEJoB,EAAU,SAAD,OAAUpB,GAAM,IAFrB,uBAEnB8B,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,yDAMpBC,QAAQC,OAAO,mDANK,yDAAH,sDAUfK,EAAa,mCAAG,WAAOrC,EAAIsC,GAAX,kGAEFlB,EAAU,SAAD,OAAUpB,EAAV,YAAgBsC,GAAS,IAFhC,uBAEjBR,EAFiB,EAEjBA,KAFiB,kBAIlBA,GAJkB,yDAMlBC,QAAQC,OAAO,mDANG,yDAAH,yD,kICD1B,UA9BiB,WACf,OAA4BO,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAASxB,EAAAA,GAAAA,MAArC,eAAO2B,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,EAAU5B,EAAAA,GAAAA,SADZ,mBAGuBa,EAAAA,EAAAA,MAHvB,OAGUE,EAHV,OAKIW,EAAUX,GACVa,EAAU5B,EAAAA,GAAAA,UANd,gDAQI4B,EAAU5B,EAAAA,GAAAA,UARd,0DADc,uBAAC,WAAD,wBAYd8B,KACC,KAGD,gCACGH,IAAW3B,EAAAA,GAAAA,UAAkB,SAAC,IAAD,IAE7B2B,IAAW3B,EAAAA,GAAAA,WAAmB,SAAC,IAAD,CAAWlB,MAAO2C,IAEhDE,IAAW3B,EAAAA,GAAAA,WAAmB","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","helpers/helpers.js","service/createConfigForRequest.js","service/api.js","views/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieItem_img__Q3nH0\",\"link__wrap\":\"MovieItem_link__wrap__6Wq6D\",\"link\":\"MovieItem_link__mit6j\",\"title\":\"MovieItem_title__JQYXo\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { PATH_IMAGE, DEFAULT_IMAGE } from 'helpers/helpers';\nimport s from './MovieItem.module.css';\n\nconst MovieItem = ({ movie }) => {\n  const location = useLocation();\n\n  const { id, poster_path, title, original_name } = movie;\n\n  return (\n    <li className={s.item}>\n      <Link\n        to={{\n          pathname: `/movies/${id}`,\n          state: { from: location },\n        }}\n        className={s.link}\n      >\n        <img\n          className={s.img}\n          src={poster_path ? PATH_IMAGE + poster_path : DEFAULT_IMAGE}\n          alt={movie.title || movie.original_name}\n        />\n        <p className={s.title}>{title || original_name}</p>\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    original_name: PropTypes.string,\n  }),\n};\n\nexport default MovieItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import PropTypes from 'prop-types';\nimport MovieItem from 'components/MovieItem';\n\nimport s from './MovieList.module.css';\n\nconst MovieList = ({ movie }) => {\n  return (\n    <ul className={s.list}>\n      {movie && movie.map(movie => <MovieItem key={movie.id} movie={movie} />)}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movie: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","export const PATH_IMAGE = 'https://image.tmdb.org/t/p/w1280';\nexport const DEFAULT_IMAGE =\n  'https://cdn.pixabay.com/photo/2016/04/01/10/11/avatar-1299805__340.png';\n\nexport const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_THEMOVIEDB_KEY = '185a0ab5d7b155f2662fdcb8709753e2';\n\nexport const getMovies = axios.create({\n  url: '',\n  baseURL: BASE_URL,\n\n  params: {\n    api_key: API_THEMOVIEDB_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n","import { getMovies } from './createConfigForRequest';\n\nexport const getTrendingMovieAll = async () => {\n  try {\n    const {\n      data: { results },\n    } = await getMovies('/trending/all/day', {});\n\n    return results;\n  } catch (error) {\n    return Promise.reject('There is no information about the movie yet...');\n  }\n};\n\nexport const getMovie = async name => {\n  try {\n    const {\n      data: { results },\n    } = await getMovies('/search/movie', {\n      params: { query: name },\n    });\n\n    return results;\n  } catch (error) {\n    return Promise.reject('There is no information about the movie yet...');\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const { data } = await getMovies(`movie/${id}`, {});\n\n    return data;\n  } catch (error) {\n    return Promise.reject('There is no information about the movie yet...');\n  }\n};\n\nexport const getMoviesInfo = async (id, param) => {\n  try {\n    const { data } = await getMovies(`movie/${id}/${param}`, {});\n\n    return data;\n  } catch (error) {\n    return Promise.reject('There is no information about the movie yet...');\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovieAll } from 'service/api';\nimport { Status } from 'helpers/helpers';\n\nimport MovieList from 'components/MovieList';\nimport Loader from 'components/Loader';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    async function getPopularMovies() {\n      setStatus(Status.PENDING);\n      try {\n        const data = await getTrendingMovieAll();\n\n        setMovies(data);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n      }\n    }\n    getPopularMovies();\n  }, []);\n\n  return (\n    <>\n      {status === Status.PENDING && <Loader />}\n\n      {status === Status.RESOLVED && <MovieList movie={movies} />}\n\n      {status === Status.REJECTED && <h1>Ops...</h1>}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["movie","location","useLocation","id","poster_path","title","original_name","className","s","to","pathname","state","from","src","PATH_IMAGE","DEFAULT_IMAGE","alt","map","Status","IDLE","PENDING","RESOLVED","REJECTED","getMovies","axios","url","baseURL","params","api_key","language","include_adult","getTrendingMovieAll","results","data","Promise","reject","getMovie","name","query","getMovieDetails","getMoviesInfo","param","useState","movies","setMovies","status","setStatus","useEffect","getPopularMovies"],"sourceRoot":""}